swagger: '2.0'

# Document metadata
info:
  version: "3.0.0"
  title: Music website
  description: Music API with *Playlists*

# URL data
host: api.muzicplayz.com
basePath: /v3
schemes:
- https

# Endpoints
paths:
  # Music albums
  /playlist:
    # Get one or more albums
    get:
      operationId: getPlaylists
      description: Gets one or more playlists
      # Query parameters
      parameters:
        # Limiting retreiving data
        - name: limit
          in: query
          required: false
          type: number
          description: Limit retreiving data
        # Index of first playlist to start
        - name: offset
          in:  query
          required:  false
          type: number
          description: Index of first playlist to start 
        # Return playlists whose name contains this string
        - name: search
          in:  query
          required:  false
          type: string
          description: Return playlists whose name contains this string
          
      security:
        - basicAuth: [ ]    
      responses:
      # Response code
        200:
          description: Successful response
      
    #Create a new playlist  
    post:
      operationId: postPlaylist
      # Path parameter
      parameters:
      # playlist id to be deleted
        - name: newPlaylist
          in: body
          required: true
          schema: 
            $ref:  '#/definitions/newPlaylist'
          description: New playlist
      responses:
      # Response code
        200:
          description: Successful response
  
  # Playlists
  /playlist/{playlist-id}:    
    # Delete a playlist 
    delete:
      operationId: delPlaylist
      description: Deletes a playlist.
      # Path parameter
      parameters:
      # playlist id to be deleted
        - name: playlist-id
          in: path
          required: true
          type: string
          description: ID of the playlist to delete
      responses:
      # Response code
        200:
          description: Successful response
        410:
          description: Playlist already deleted
          schema:
             $ref: '#/definitions/error'
        
    # Get a playlist 
    get:
      operationId: getPlaylist
      description: Returns a playlist.
      # Path parameter
      parameters:
      # playlist id to be retrieved
        - name: playlist-id
          in: path
          required: true
          type: string
          description: ID of the playlist to return
      responses:
      # Response code
        200:
          description: Successful response        
          schema:
            type: "array"
            items:
              $ref: '#/definitions/playlistWithSongs'
            
  # get an image
  /playlists/{playlist-id}/image:
    get:
      operationId: getImage
      description: Returns a generated image for the playlist.
      # Path parameter
      parameters:
      # playlist id to be retrieved
        - name: playlist-id
          in: path
          required: true
          type: string
          description: ID of the playlist to generate the image for
      responses:
      # Response code
        200:
          description: Successful response        
          schema:
            type: "file"
            
      produces:
        - image/png  
          
definitions:
  # New play list
  newPlaylist:
    description: New playlist
    properties:
      name:
        type: string
        description: Playlist name
      songIds:
        type: array
        description: IDs of the songs in the playlist
        items: 
          type: integer
      
  # Playlist with song info    
  playlistWithSongs:
    description: Playlist with song information
    properties:
      id:
        type: integer
        description: ID of the playlist
      name:
        type: string
        description: Name of the playlist
      song:
        type: array
        description: Song in the playlist
        items: 
          $ref: '#/definitions/song'
          
  # Song info
  song:
    description: Song information
    properties:
      id:
        type: integer
        description: Song ID
      title:
        type: string  
        description: Song title
      artist:
        type: string  
        description: Song artist
        
  # Errors
  error:
    description: Error information
    properties:
      errorMessage:
        type: string
        description: Human readable error message
      logData:
        type: object
        description: Data that appears in the log when the error occurs
        properties:
          entry:
            type: integer
            description: Log entry number
          date:
            type: string
            description: Log entry date
            
          
securityDefinitions:
  basicAuth:
    type: basic
    description: Username and password